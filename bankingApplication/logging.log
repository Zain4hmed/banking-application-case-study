Starting CustomerRegistrationServiceApplication using Java 17.0.10 with PID 15752 (C:\Users\zaina\banking-application-case-study\customerRegistrationService\customerRegistrationService\target\classes started by zaina in C:\Users\zaina\banking-application-case-study\customerRegistrationService\customerRegistrationService)
No active profile set, falling back to 1 default profile: "default"
Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 116 ms. Found 1 JPA repository interface.
Tomcat initialized with port 8080 (http)
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/10.1.19]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3355 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate ORM core version 6.4.4.Final
HHH000026: Second-level cache disabled
No LoadTimeWeaver setup: ignoring JPA class transformer
HikariPool-1 - Starting...
HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@44422ac0
HikariPool-1 - Start completed.
HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Initialized JPA EntityManagerFactory for persistence unit 'default'
Autowired annotation is not supported on static fields: private static com.microservice.customer.service.repository.CustomerRepository com.microservice.customer.service.service.Validations.customerRepository
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
LiveReload server is running on port 35729
Tomcat started on port 8080 (http) with context path ''
Started CustomerRegistrationServiceApplication in 14.701 seconds (process running for 17.05)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 8 ms
Tracking Id :e742876c-b407-4849-bf8c-e97cf42d6226 request to create new customer
Tracking Id: e742876c-b407-4849-bf8c-e97cf42d6226 - Validating customer data
Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "com.microservice.customer.service.repository.CustomerRepository.findAll()" because "com.microservice.customer.service.service.Validations.customerRepository" is null] with root cause
java.lang.NullPointerException: Cannot invoke "com.microservice.customer.service.repository.CustomerRepository.findAll()" because "com.microservice.customer.service.service.Validations.customerRepository" is null
	at com.microservice.customer.service.service.Validations.isUniqueUsername(Validations.java:107)
	at com.microservice.customer.service.service.Validations.validateCustomer(Validations.java:56)
	at com.microservice.customer.service.service.CustomerServiceImpl.addCustomer(CustomerServiceImpl.java:35)
	at com.microservice.customer.service.controller.CustomerRegistrationController.registerCustomer(CustomerRegistrationController.java:49)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Closing JPA EntityManagerFactory for persistence unit 'default'
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Shutdown completed.
Starting CustomerRegistrationServiceApplication using Java 17.0.10 with PID 11964 (C:\Users\zaina\banking-application-case-study\customerRegistrationService\customerRegistrationService\target\classes started by zaina in C:\Users\zaina\banking-application-case-study\customerRegistrationService\customerRegistrationService)
No active profile set, falling back to 1 default profile: "default"
Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 126 ms. Found 1 JPA repository interface.
Tomcat initialized with port 8080 (http)
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/10.1.19]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3026 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate ORM core version 6.4.4.Final
HHH000026: Second-level cache disabled
No LoadTimeWeaver setup: ignoring JPA class transformer
HikariPool-1 - Starting...
HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@536f235e
HikariPool-1 - Start completed.
HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Initialized JPA EntityManagerFactory for persistence unit 'default'
Autowired annotation is not supported on static fields: private static com.microservice.customer.service.repository.CustomerRepository com.microservice.customer.service.service.Validations.customerRepository
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
LiveReload server is running on port 35729
Tomcat started on port 8080 (http) with context path ''
Started CustomerRegistrationServiceApplication in 8.702 seconds (process running for 9.561)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 2 ms
Tracking Id :436e1217-6332-464d-b81a-446dd48a0ca0 request to create new customer
Tracking Id: 436e1217-6332-464d-b81a-446dd48a0ca0 - Validating customer data
Tracking Id: 436e1217-6332-464d-b81a-446dd48a0ca0 - Validation successfully for customer data
Tracking Id: 436e1217-6332-464d-b81a-446dd48a0ca0 - encrypting password & setting cust Id and saving the customer in DB
Closing JPA EntityManagerFactory for persistence unit 'default'
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Shutdown completed.
Starting CustomerRegistrationServiceApplication using Java 17.0.10 with PID 15456 (C:\Users\zaina\banking-application-case-study\customerRegistrationService\customerRegistrationService\target\classes started by zaina in C:\Users\zaina\banking-application-case-study\customerRegistrationService\customerRegistrationService)
No active profile set, falling back to 1 default profile: "default"
Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 125 ms. Found 1 JPA repository interface.
Tomcat initialized with port 8080 (http)
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/10.1.19]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3020 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate ORM core version 6.4.4.Final
HHH000026: Second-level cache disabled
No LoadTimeWeaver setup: ignoring JPA class transformer
HikariPool-1 - Starting...
HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5a1a92f9
HikariPool-1 - Start completed.
HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Initialized JPA EntityManagerFactory for persistence unit 'default'
Autowired annotation is not supported on static fields: private static com.microservice.customer.service.repository.CustomerRepository com.microservice.customer.service.service.Validations.customerRepository
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
LiveReload server is running on port 35729
Tomcat started on port 8080 (http) with context path ''
Started CustomerRegistrationServiceApplication in 8.653 seconds (process running for 9.514)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 0 ms
Tracking Id :490751fa-1da8-4864-bdb8-5df92c704e1b request to create new customer
Tracking Id: 490751fa-1da8-4864-bdb8-5df92c704e1b - Validating customer data
Tracking Id: 490751fa-1da8-4864-bdb8-5df92c704e1b - Validation successfully for customer data
Tracking Id: 490751fa-1da8-4864-bdb8-5df92c704e1b - encrypting password & setting cust Id and saving the customer in DB
Tracking Id :f56ef17a-87f9-43e6-b186-9b928bb0d8c2 request to get all customers from DB
Tracking Id: f56ef17a-87f9-43e6-b186-9b928bb0d8c2 - fetching all the customer from DB
Tracking Id :c2d264ac-2fba-43ee-ba65-57c1cf837cbe request to get all customers from DB
Tracking Id: c2d264ac-2fba-43ee-ba65-57c1cf837cbe - fetching all the customer from DB
Tracking Id :26d60c56-5083-4db3-97e7-b716cab820b9 request to get all customers from DB
Tracking Id: 26d60c56-5083-4db3-97e7-b716cab820b9 - fetching all the customer from DB
Tracking Id :4987cae7-ae15-4b62-a297-81a0e83faa37 request to get all customers from DB
Tracking Id: 4987cae7-ae15-4b62-a297-81a0e83faa37 - fetching all the customer from DB
Tracking Id :84085017-3f04-4ab9-b8f5-fe982c1270c7 request to get all customers from DB
Tracking Id: 84085017-3f04-4ab9-b8f5-fe982c1270c7 - fetching all the customer from DB
Closing JPA EntityManagerFactory for persistence unit 'default'
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Shutdown completed.
Starting CustomerRegistrationServiceApplication using Java 17.0.10 with PID 9824 (C:\Users\zaina\banking-application-case-study\customerRegistrationService\customerRegistrationService\target\classes started by zaina in C:\Users\zaina\banking-application-case-study\customerRegistrationService\customerRegistrationService)
No active profile set, falling back to 1 default profile: "default"
Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 114 ms. Found 1 JPA repository interface.
Tomcat initialized with port 8080 (http)
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/10.1.19]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3406 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate ORM core version 6.4.4.Final
HHH000026: Second-level cache disabled
No LoadTimeWeaver setup: ignoring JPA class transformer
HikariPool-1 - Starting...
HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@404e6a7d
HikariPool-1 - Start completed.
HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Initialized JPA EntityManagerFactory for persistence unit 'default'
Autowired annotation is not supported on static fields: private static com.microservice.customer.service.repository.CustomerRepository com.microservice.customer.service.service.Validations.customerRepository
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
LiveReload server is running on port 35729
Tomcat started on port 8080 (http) with context path ''
Started CustomerRegistrationServiceApplication in 9.433 seconds (process running for 10.239)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 2 ms
Tracking Id :a305b378-2e33-4a41-9596-35230bbe2ce2 request to get all customers from DB
Tracking Id: a305b378-2e33-4a41-9596-35230bbe2ce2 - fetching all the customer from DB
Closing JPA EntityManagerFactory for persistence unit 'default'
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Shutdown completed.
Starting CustomerRegistrationServiceApplication using Java 17.0.10 with PID 11980 (C:\Users\zaina\banking-application-case-study\customerRegistrationService\customerRegistrationService\target\classes started by zaina in C:\Users\zaina\banking-application-case-study\customerRegistrationService\customerRegistrationService)
No active profile set, falling back to 1 default profile: "default"
Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 127 ms. Found 1 JPA repository interface.
Tomcat initialized with port 8080 (http)
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/10.1.19]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3030 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate ORM core version 6.4.4.Final
HHH000026: Second-level cache disabled
No LoadTimeWeaver setup: ignoring JPA class transformer
HikariPool-1 - Starting...
HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1a1847e3
HikariPool-1 - Start completed.
HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Initialized JPA EntityManagerFactory for persistence unit 'default'
Autowired annotation is not supported on static fields: private static com.microservice.customer.service.repository.CustomerRepository com.microservice.customer.service.service.Validations.customerRepository
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
LiveReload server is running on port 35729
Tomcat started on port 8080 (http) with context path ''
Started CustomerRegistrationServiceApplication in 8.585 seconds (process running for 9.427)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 2 ms
Tracking Id :6ba5e2cc-5e4b-48f8-8b3f-47bda905627e request to get all customers from DB
Tracking Id: 6ba5e2cc-5e4b-48f8-8b3f-47bda905627e - fetching all the customer from DB
Closing JPA EntityManagerFactory for persistence unit 'default'
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Shutdown completed.
Starting CustomerRegistrationServiceApplication using Java 17.0.10 with PID 15756 (C:\Users\zaina\banking-application-case-study\customerRegistrationService\customerRegistrationService\target\classes started by zaina in C:\Users\zaina\banking-application-case-study\customerRegistrationService\customerRegistrationService)
No active profile set, falling back to 1 default profile: "default"
Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 126 ms. Found 1 JPA repository interface.
Tomcat initialized with port 8080 (http)
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/10.1.19]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2971 ms
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate ORM core version 6.4.4.Final
HHH000026: Second-level cache disabled
No LoadTimeWeaver setup: ignoring JPA class transformer
HikariPool-1 - Starting...
HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@717a98b7
HikariPool-1 - Start completed.
HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Initialized JPA EntityManagerFactory for persistence unit 'default'
Autowired annotation is not supported on static fields: private static com.microservice.customer.service.repository.CustomerRepository com.microservice.customer.service.service.Validations.customerRepository
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
LiveReload server is running on port 35729
Tomcat started on port 8080 (http) with context path ''
Started CustomerRegistrationServiceApplication in 8.624 seconds (process running for 9.428)
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 0 ms
Tracking Id :33ac1eb8-901f-42a3-9a2d-3350b6562130 request to get all customers from DB
Tracking Id: 33ac1eb8-901f-42a3-9a2d-3350b6562130 - fetching all the customer from DB
Closing JPA EntityManagerFactory for persistence unit 'default'
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Shutdown completed.
